name: CI Pipeline

on: push

permissions:
    packages: write
    contents: read
    actions: read

jobs:
    install:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Install Dependencies
              run: |
                  python3 -m pip install --upgrade pip
                  pip install poetry

            - uses: actions/setup-python@v5
              with:
                  python-version: '3.12'
                  cache: 'poetry'
                  id: 'py-supraexporter'

            - run: poetry install -vv
            - name: Create dot_env
              id: 'env-supraexporter'
              run: |
                cp .env.example .env
                echo "envdir=$(realpath ".env")"  >> "$GITHUB_OUTPUT"

    lint:
        runs-on: ubuntu-latest
        needs: install
        steps:
            - name: Run Linting
              run: |
                  poetry run pre-commit run black --all-files
                  poetry run pre-commit run isort --all-files
                  poetry run pre-commit run flake8 --all-files
                  poetry run pre-commit run codespell --all-files
        
    format:
        uses: ./.github/workflows/format.yml

    run-tests:
        uses: ./.github/workflows/tests.yml

    check-docstring:
        uses: ./.github/workflows/docstring-check.yml

    type-check:
        uses: ./.github/workflows/type-check.yml

    docker:
        uses: ./.github/workflows/docker.yml
