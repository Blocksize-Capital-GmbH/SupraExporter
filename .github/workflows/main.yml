name: CI Pipeline

on: push

permissions:
    packages: write
    contents: read
    actions: read

jobs:
    install:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: setup-python-env
              uses: actions/setup-python@v5
              with:
                  python-version: '3.12'
                  
            - name: Set up Poetry 
              uses: abatilo/actions-poetry@v4
              with:
                poetry-version: 1.8.4

            - name: Setup a local virtual environment (if no poetry.toml file)
              run: |
                poetry config virtualenvs.create true --local
                poetry config virtualenvs.in-project true --local

            - name: Set up cache
              uses: actions/cache@v4
              id: cache-venv
              env:
                cache-name: cache-venv
              with:
                path: ./.venv
                key: venv-${{ hashFiles('poetry.lock') }}
                restore-keys: |
                    venv-cache-${{ runner.os }}-
                    venv-cache-

            - name: Ensure cache is healthy
              if: steps.cache-venv.outputs.cache-hit == 'true'
              run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

            - name: Install deps
              run: poetry install -vv --no-root
              
            - name: Create dot_env
              id: 'env-supraexporter'
              run: |
                cp .env.example .env
                echo "envdir=$(realpath ".env")"  >> "$GITHUB_OUTPUT"

    lint:
        runs-on: ubuntu-latest
        needs: install
        steps:
            - name: Run Linting
              run: |
                  poetry run pre-commit run black --all-files
                  poetry run pre-commit run isort --all-files
                  poetry run pre-commit run flake8 --all-files
                  poetry run pre-commit run codespell --all-files
        
    format:
        uses: ./.github/workflows/format.yml

    run-tests:
        uses: ./.github/workflows/tests.yml

    check-docstring:
        uses: ./.github/workflows/docstring-check.yml

    type-check:
        uses: ./.github/workflows/type-check.yml

    docker:
        uses: ./.github/workflows/docker.yml
