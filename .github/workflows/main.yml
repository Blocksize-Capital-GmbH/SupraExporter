---
name: CI Pipeline

on:
    push:
        branches:
            - main
            - develop
            - "feature/*"
            - "bug-fixes"
            - "hotfix/*"
    pull_request:
        branches: [main]
        types: [opened, synchronize, reopened]

permissions:
    packages: write
    contents: read
    actions: read
    security-events: write

env:
    PYTHON_VERSION: "3.12"
    ARTIFACTS_DIR: "artifacts"

jobs:
    # Skip duplicate runs for PRs and pushes
    skip_check:
        name: Skip Duplicate Runs
        runs-on: ubuntu-22.04
        outputs:
            should_skip: ${{ steps.skip_check.outputs.should_skip }}
        steps:
            - id: skip_check
              uses: fkirc/skip-duplicate-actions@v5
              with:
                  # Skip concurrent runs for the same branch/PR
                  concurrent_skipping: "same_content_newer"
                  # Skip if a PR exists for this branch and commit
                  skip_after_successful_duplicate: "true"
                  # Skip based on paths if needed
                  do_not_skip: '["workflow_dispatch", "schedule"]'

    setup:
        name: Setup Environment
        needs: skip_check
        if: needs.skip_check.outputs.should_skip != 'true'
        uses: ./.github/workflows/setup-environment.yml
        with:
            python-version: "3.12"
            artifacts-dir: "artifacts"

    # Code quality checks - run on all branches
    format:
        name: Check Code Formatting
        needs: [skip_check, setup]
        if: needs.skip_check.outputs.should_skip != 'true'
        uses: ./.github/workflows/format.yml
        with:
            python-version: "3.12"
            artifacts-dir: "artifacts"

    lint:
        name: Run Code Linting
        needs: [skip_check, setup]
        if: needs.skip_check.outputs.should_skip != 'true'
        uses: ./.github/workflows/lint.yml
        with:
            python-version: "3.12"
            artifacts-dir: "artifacts"

    type_check:
        name: Run Type Checking
        needs: [skip_check, setup]
        if: needs.skip_check.outputs.should_skip != 'true'
        uses: ./.github/workflows/type-check.yml
        with:
            python-version: "3.12"
            artifacts-dir: "artifacts"

    docstring_check:
        name: Check Documentation Strings
        needs: [skip_check, setup]
        if: needs.skip_check.outputs.should_skip != 'true'
        uses: ./.github/workflows/docstring-check.yml
        with:
            python-version: "3.12"
            artifacts-dir: "artifacts"

    pre_commit_all:
        name: Run All Pre-commit Hooks
        needs: [skip_check, setup]
        if: needs.skip_check.outputs.should_skip != 'true'
        uses: ./.github/workflows/pre-commit-all.yml
        with:
            python-version: "3.12"
            artifacts-dir: "artifacts"

    # Tests - with coverage for main/PRs, without for feature branches
    tests:
        name: Run Tests
        needs: [skip_check, setup]
        if: needs.skip_check.outputs.should_skip != 'true'
        uses: ./.github/workflows/tests.yml
        with:
            python-version: "3.12"
            artifacts-dir: "artifacts"
            skip-coverage: ${{ github.ref != 'refs/heads/main' && !(github.event_name == 'pull_request' && github.base_ref == 'main') }}

    # Security scanning
    security_scan:
        name: Security Scan
        runs-on: ubuntu-22.04
        needs: [skip_check, setup]
        if: needs.skip_check.outputs.should_skip != 'true'
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Run Trivy vulnerability scanner
              id: trivy-scan
              uses: aquasecurity/trivy-action@0.24.0
              with:
                  scan-type: "fs"
                  scan-ref: "."
                  format: ${{ (github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main')) && 'sarif' || 'table' }}
                  output: ${{ (github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main')) && 'trivy-results.sarif' || '' }}
                  exit-code: "0"

            - name: Upload Trivy scan results to GitHub Security tab
              uses: github/codeql-action/upload-sarif@v3
              if: always() && steps.trivy-scan.conclusion != 'skipped' && (github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main'))
              with:
                  sarif_file: "trivy-results.sarif"
                  category: "trivy-security-scan"

    # Docker build and push
    docker:
        name: Build and Push Docker Image
        needs:
            [
                skip_check,
                format,
                lint,
                type_check,
                docstring_check,
                pre_commit_all,
                tests,
                security_scan,
            ]
        if: needs.skip_check.outputs.should_skip != 'true'
        uses: ./.github/workflows/docker.yml
        with:
            build-type: ${{ (github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main')) && 'main' || 'branch' }}
            branch-name: ${{ github.ref_name }}

    # Final status check
    ci_success:
        name: CI Pipeline Success
        runs-on: ubuntu-22.04
        if: always() && needs.skip_check.outputs.should_skip != 'true'
        needs: [skip_check, docker]
        steps:
            - name: Check CI status
              run: |
                  if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
                      echo "❌ CI Pipeline failed"
                      exit 1
                  elif [[ "${{ contains(needs.*.result, 'cancelled') }}" == "true" ]]; then
                      echo "⚠️ CI Pipeline was cancelled"
                      exit 1
                  else
                      echo "✅ CI Pipeline completed successfully"
                  fi
