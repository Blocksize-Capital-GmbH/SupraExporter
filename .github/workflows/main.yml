name: CI Pipeline

on: push

permissions:
    packages: write
    contents: read
    actions: read

jobs:
    install:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: setup-python-env
              uses: actions/setup-python@v4
              with:
                  python-version: '3.12'

            - name: create venv
              run: | 
                python -m pip install --upgrade pip
                python -m venv ~/poetry-venv
                source ~/poetry-venv/bin/activate
                pip install poetry               
                poetry install -vv --no-root
                cp .env.example ~/poetry-venv/.env
                echo "envdir=$(realpath "~/poetry-venv/.env")"  >> "$GITHUB_OUTPUT"

            - name: verbose env dir
              run: |
                  source ~/poetry-venv/bin/activate
                  echo $(ls -ltrh)
                  python --version


            - name: Set up cache
              id: cache-python-env
              uses: actions/cache@v4
              env: 
                cache-name: cache-venv
              with:
                path: ~/poetry-venv
                key: ${{ env.cache-name }}-${{ hashFiles('poetry.lock') }}


            - name: Create dot_env
              id: 'env-supraexporter'
              run: |
                cp .env.example ~/poetry-venv/.env
                echo "envdir=$(realpath ".env")"  >> "$GITHUB_OUTPUT"

    lint:
        runs-on: ubuntu-latest
        needs: install
        steps:
            - name: Run Linting
              run: |
                  poetry run pre-commit run black --all-files
                  poetry run pre-commit run isort --all-files
                  poetry run pre-commit run flake8 --all-files
                  poetry run pre-commit run codespell --all-files
        
    format:
        uses: ./.github/workflows/format.yml

    run-tests:
        uses: ./.github/workflows/tests.yml

    check-docstring:
        uses: ./.github/workflows/docstring-check.yml

    type-check:
        uses: ./.github/workflows/type-check.yml

    docker:
        uses: ./.github/workflows/docker.yml
